// import 'dart:convert';
// import 'package:app_web/global_variable.dart';
// import 'package:app_web/models/subcategory.dart';
// import 'package:app_web/services/manage_http_response.dart';
// import 'package:cloudinary_public/cloudinary_public.dart';
// import 'package:flutter/material.dart';
// import 'package:http/http.dart' as http;

// class SubcategoryController {
//   static Future<void> uploadSubcategory({
//     required BuildContext context,
//     required String categoryId,
//     required String categoryName,
//     required dynamic pickedImage,
//     required String subCategoryName,
//   }) async {
//     try {
//       // Initialize Cloudinary
//       final cloudinary = CloudinaryPublic("dlj48j9ay", "l4pizuwf");

//       // Upload image to Cloudinary
//       CloudinaryResponse imageResponse = await cloudinary.uploadFile(
//         CloudinaryFile.fromBytesData(
//           pickedImage,
//           identifier: "pickedImage",
//           folder: "categoryImages",
//         ),
//       );

//       // Get the image URL from Cloudinary
//       String image = imageResponse.secureUrl;

//       // Create the Subcategory object
//       Subcategory subcategory = Subcategory(
//         id: "", // You might want to leave this as an empty string if the ID is auto-generated by your backend
//         categoryId: categoryId,
//         categoryName: categoryName,
//         image: image,
//         subCategoryName: subCategoryName,
//       );

//       // Define the API endpoint
//       http.Response response = await http.post(
//         Uri.parse("$uri/api/subcategories"),
//         body: jsonEncode(subcategory
//             .toJson()), // Ensure that subcategory.toJson() returns a valid map
//         headers: <String, String>{
//           'Content-Type': 'application/json; charset=UTF-8',
//         },
//       );

//       // Handle the response
//       manageHttpResponse(
//         response: response,
//         context: context, // Pass the context for showing Snackbar
//         onSuccess: () {
//           showSnackBar(context, "Subcategory uploaded successfully!");
//         },
//       );
//     } catch (e) {
//       // Catch any errors during the process
//       print("Error uploading subcategory: $e");
//       showSnackBar(context, "Error uploading subcategory. Please try again.");
//     }
//   }
// }

import 'dart:convert';
import 'package:app_web/global_variable.dart'; // Your URI here
import 'package:app_web/models/subcategory.dart';
import 'package:app_web/services/manage_http_response.dart';
import 'package:cloudinary_public/cloudinary_public.dart';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

class SubcategoryController {
  // Upload Subcategory
  static Future<void> uploadSubcategory({
    required BuildContext context,
    required String categoryId,
    required String categoryName,
    required dynamic pickedImage,
    required String subCategoryName,
  }) async {
    try {
      // Initialize Cloudinary
      final cloudinary = CloudinaryPublic("dlj48j9ay", "l4pizuwf");

      // Upload image to Cloudinary
      CloudinaryResponse imageResponse = await cloudinary.uploadFile(
        CloudinaryFile.fromBytesData(
          pickedImage,
          identifier: "pickedImage",
          folder: "categoryImages",
        ),
      );

      // Get the image URL from Cloudinary
      String image = imageResponse.secureUrl;

      // Create the Subcategory object
      Subcategory subcategory = Subcategory(
        id: "", // You might want to leave this as an empty string if the ID is auto-generated by your backend
        categoryId: categoryId,
        categoryName: categoryName,
        image: image,
        subCategoryName: subCategoryName,
      );

      // Define the API endpoint for uploading
      http.Response response = await http.post(
        Uri.parse("$uri/api/subcategories"), // Use your global URI variable
        body: jsonEncode(subcategory
            .toJson()), // Ensure that subcategory.toJson() returns a valid map
        headers: <String, String>{
          'Content-Type': 'application/json; charset=UTF-8',
        },
      );

      // Handle the response
      manageHttpResponse(
        response: response,
        context: context, // Pass the context for showing Snackbar
        onSuccess: () {
          showSnackBar(context, "Subcategory uploaded successfully!");
        },
      );
    } catch (e) {
      // Catch any errors during the process
      print("Error uploading subcategory: $e");
      showSnackBar(context, "Error uploading subcategory. Please try again.");
    }
  }

  // Fetch Subcategories by Category Name
  Future<List<Subcategory>> loadSubcategories() async {
    try {
      final response = await http.get(
        Uri.parse("$uri/api/subcategories"),
        headers: <String, String>{
          'Content-Type': 'application/json; charset=UTF-8',
        },
      );

      if (response.statusCode == 200) {
        // Successful response, parse the data
        final List<dynamic> data = jsonDecode(response.body);
        List<Subcategory> subcategories = data
            .map((subcategory) => Subcategory.fromJson(subcategory))
            .toList();
        return subcategories;
      } else {
        throw Exception("Faild to load Subcategories");
      }
    } catch (e) {
      print("Error fetching subcategories: $e");
      // showSnackBar(context, "Error fetching subcategories: $e");
      throw Exception("Error loading Sub category");
    }
  }
}
